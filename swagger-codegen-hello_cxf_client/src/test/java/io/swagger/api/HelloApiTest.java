/**
 * Sample REST Application
 * The Application
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.HelloModel;
import java.io.File;
import org.junit.Test;
import org.junit.Before;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;
import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.google.common.net.MediaType;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for HelloApi
 */
public class HelloApiTest {


    private HelloApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("http://localhost:8080/services", HelloApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        // client.acceptEncoding(encodings)

        ClientConfiguration config = WebClient.getConfig(client); 
        // Example for using Gzipping
        // GZIPOutInterceptor gzipOutInterceptor = new GZIPOutInterceptor();
        // // use Gzipping for first request sent to server
        // //gzipOutInterceptor.setForce(true);
        // config.getOutInterceptors().add(gzipOutInterceptor);
        //
        // config.getInInterceptors().add(new GZIPInInterceptor());
    }

    
    /**
     * helloRequest
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void helloRequestTest() {
        String name = null;
        HelloModel body = null;
        // HelloModel response = api.helloRequest(name, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sayHelloTest() {
        String name = "name";
        String firstName = "firstName";
        String response = api.sayHello(name, firstName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sayHelloWithModelTest() {
        String name = "name";
        String firstName = "firstName";
        HelloModel response = api.sayHelloWithModel(name, firstName);

        // TODO: test validations
    }
    
    /**
     * uploads an image
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() {
        String name = null;
        File file = null;
        // String response = api.uploadFile(name, file);

        // TODO: test validations
    }
    
}
